set(arithmetic).
assign(domain_size, 2).
assign(max_models, -1).

formulas(assumptions).

%mi = [["The message on the door of room i is true"]]
%li = [["There is a lady in room i"]]
%ei = [["Room i is empty"]]
%ti = [["There is a tiger in room i"]]

%there is one lady
((l1 + l2 + l3) + (l4 + l5 + l6) + (l7 + l8 + l9)) mod 2 = 1.

((l1 * l2 * l3) * (l4 * l5 * l6) * (l7 * l8 * l9)) mod 2 = 0.

%If lady in room, then it can not contain a tiger and it can not be empty
(l1 * ((t1 + 1) * (e1 + 1)) + l1 + 1) mod 2 = 1.
(l2 * ((t2 + 1) * (e2 + 1)) + l2 + 1) mod 2 = 1.
(l3 * ((t3 + 1) * (e3 + 1)) + l3 + 1) mod 2 = 1.
(l4 * ((t4 + 1) * (e4 + 1)) + l4 + 1) mod 2 = 1.
(l5 * ((t5 + 1) * (e5 + 1)) + l5 + 1) mod 2 = 1.
(l6 * ((t6 + 1) * (e6 + 1)) + l6 + 1) mod 2 = 1.
(l7 * ((t7 + 1) * (e7 + 1)) + l7 + 1) mod 2 = 1.
(l8 * ((t8 + 1) * (e8 + 1)) + l8 + 1) mod 2 = 1.
(l9 * ((t9 + 1) * (e9 + 1)) + l9 + 1) mod 2 = 1.

%If tiger in room it can not contain a lady and it can not be empty
(t1 * ((e1 + 1) * (l1 + 1)) + t1 + 1) mod 2 = 1.
(t2 * ((e2 + 1) * (l2 + 1)) + t2 + 1) mod 2 = 1.
(t3 * ((e3 + 1) * (l3 + 1)) + t3 + 1) mod 2 = 1.
(t4 * ((e4 + 1) * (l4 + 1)) + t4 + 1) mod 2 = 1.
(t5 * ((e5 + 1) * (l5 + 1)) + t5 + 1) mod 2 = 1.
(t6 * ((e6 + 1) * (l6 + 1)) + t6 + 1) mod 2 = 1.
(t7 * ((e7 + 1) * (l7 + 1)) + t7 + 1) mod 2 = 1.
(t8 * ((e8 + 1) * (l8 + 1)) + t8 + 1) mod 2 = 1.
(t9 * ((e9 + 1) * (l9 + 1)) + t9 + 1) mod 2 = 1.




m1 = (l1 + l3 + l5 + l7 + l9) mod 2.
m2 = e2.
m3 = (m5 * (m7 + 1) + m5 + m7 + 1) mod 2.
m4 = (m1 + 1) mod 2.
m5 = (m2 * m4 + m2 + m4) mod 2.
m6 = (m3 + 1) mod 2.
m7 = (l1 + 1) mod 2.
m8 = (t8 * e9) mod 2.
m9 = (t9 * (m6 + 1)) mod 2.

(l1 * m1 + l1 + 1) mod 2 = 1.
(l2 * m2 + l2 + 1) mod 2 = 1.
(l3 * m3 + l3 + 1) mod 2 = 1.
(l4 * m4 + l4 + 1) mod 2 = 1.
(l5 * m5 + l5 + 1) mod 2 = 1.
(l6 * m6 + l6 + 1) mod 2 = 1.
(l7 * m7 + l7 + 1) mod 2 = 1.
(l8 * m8 + l8 + 1) mod 2 = 1.
(l9 * m9 + l9 + 1) mod 2 = 1.


(t1 * (m1 + 1) + t1 + 1) mod 2 = 1.
(t2 * (m2 + 1) + t2 + 1) mod 2 = 1.
(t3 * (m3 + 1) + t3 + 1) mod 2 = 1.
(t4 * (m4 + 1) + t4 + 1) mod 2 = 1.
(t5 * (m5 + 1) + t5 + 1) mod 2 = 1.
(t6 * (m6 + 1) + t6 + 1) mod 2 = 1.
(t7 * (m7 + 1) + t7 + 1) mod 2 = 1.
(t8 * (m8 + 1) + t8 + 1) mod 2 = 1.
(t9 * (m9 + 1) + t9 + 1) mod 2 = 1.

end_of_list.
